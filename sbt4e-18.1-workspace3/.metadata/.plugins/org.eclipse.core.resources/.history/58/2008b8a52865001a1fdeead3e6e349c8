/*
 * "Hello World" example.
 *
 * This example prints 'Hello from Nios II' to the STDOUT stream. It runs on
 * the Nios II 'standard', 'full_featured', 'fast', and 'low_cost' example
 * designs. It runs with or without the MicroC/OS-II RTOS and requires a STDOUT
 * device in your system's hardware.
 * The memory footprint of this hosted application is ~69 kbytes by default
 * using the standard reference design.
 *
 * For a reduced footprint version of this template, and an explanation of how
 * to reduce the memory footprint for a given application, see the
 * "small_hello_world" template.
 *
 */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "io.h"
#include <unistd.h>
#include "system.h"
#include "alt_types.h"
#include "altera_avalon_pio_regs.h"
//#include <io.h>

#define ONCHIP_MEMORY2_0_BASE 0x10004000
#define PIO_0_BASE 0x10009010
#define PIO_1_BASE 0x00000000

int main()
{

	printf("Commands:\n Y \t Enable \n N \t Disable \n");
	// Input buffer:
	char * buffer;
	char prompt;


	printf("\n Enter Command: \n");
	prompt=getchar();
	if (prompt == 'Y')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE) == 1)
		{
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x1);
		IOWR(ONCHIP_MEMORY2_0_BASE,0,0x3);
		printf("y received");
		}
	}
	else if (prompt == 'N')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE) == 1)
		{
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x1);
		IOWR(ONCHIP_MEMORY2_0_BASE,0,0x1);
		printf("n received");
		}
	}
	else if (prompt == 'R')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE) == 1)
		{
		//IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x1);
		printf("r received");
		}
	}
	else
	{
		//IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x0);
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x0);
	}




	/* Event loop never exits. */
/*	while (1){

	// display prompt:
	printf("\n Enter Command: \n");
	prompt=getchar();
	if (prompt == 'Y')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE) == 1)
		{
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x1);
		IOWR(ONCHIP_MEMORY2_0_BASE,0,0x3);
		printf("y received");
		}
	}
	else if (prompt == 'N')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE) == 1)
		{
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x1);
		IOWR(ONCHIP_MEMORY2_0_BASE,0,0x1);
		printf("n received");
		}
	}
	else if (prompt == 'R')
	{
		if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE) == 1)
		{
		//IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x1);
		printf("r received");
		}
	}
	else
	{
		//IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x0);
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_0_BASE, 0x0);
	}
	}*/
/*		else if (IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE) == 1)
		{
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x1);
		printf("\n Read:");
		printf("%d",IORD_32DIRECT(ONCHIP_MEMORY2_0_BASE, 0));
		}*/

	//}
	return 0; //never reach here.
}
